
FAIL 'calc(1s * NaN)' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * nan)' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * infinity / infinity)' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * 0 * infinity)' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * (infinity + -infinity))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * (-infinity + infinity))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * (infinity - infinity))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * infinity)' as a specified value should serialize as 'calc(infinity * 1s)'. assert_equals: 'calc(infinity * 1s)' should round-trip exactly in specified values. expected "calc(infinity * 1s)" but got "calc(infinitys)"
FAIL 'calc(1s * -infinity)' as a specified value should serialize as 'calc(-infinity * 1s)'. assert_equals: 'calc(-infinity * 1s)' should round-trip exactly in specified values. expected "calc(-infinity * 1s)" but got "calc(-infinitys)"
FAIL 'calc(1s * iNFinIty)' as a specified value should serialize as 'calc(infinity * 1s)'. assert_equals: 'calc(infinity * 1s)' should round-trip exactly in specified values. expected "calc(infinity * 1s)" but got "calc(infinitys)"
FAIL 'calc(1s * (infinity + infinity))' as a specified value should serialize as 'calc(infinity * 1s)'. assert_equals: 'calc(infinity * 1s)' should round-trip exactly in specified values. expected "calc(infinity * 1s)" but got "calc(infinitys)"
FAIL 'calc(1s * (-infinity + -infinity))' as a specified value should serialize as 'calc(-infinity * 1s)'. assert_equals: 'calc(-infinity * 1s)' should round-trip exactly in specified values. expected "calc(-infinity * 1s)" but got "calc(-infinitys)"
PASS 'calc(1s * 1/infinity)' as a specified value should serialize as 'calc(0s)'.
FAIL 'calc(1s * infinity * infinity)' as a specified value should serialize as 'calc(infinity * 1s)'. assert_equals: 'calc(infinity * 1s)' should round-trip exactly in specified values. expected "calc(infinity * 1s)" but got "calc(infinitys)"
FAIL 'calc(1s * -infinity * -infinity)' as a specified value should serialize as 'calc(infinity * 1s)'. assert_equals: 'calc(infinity * 1s)' should round-trip exactly in specified values. expected "calc(infinity * 1s)" but got "calc(infinitys)"
FAIL 'calc(1 * max(INFinity*3s, 0s))' as a specified value should serialize as 'calc(infinity * 1s)'. assert_equals: 'calc(infinity * 1s)' should round-trip exactly in specified values. expected "calc(infinity * 1s)" but got "calc(infinitys)"
PASS 'calc(1 * min(inFInity*4s, 0s))' as a specified value should serialize as 'calc(0s)'.
FAIL 'calc(1 * max(nAn*2s, 0s))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1 * min(nan*3s, 0s))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1 * clamp(-INFINITY*20s, 0s, infiniTY*10s))' as a specified value should serialize as 'calc(0s)'. assert_equals: 'calc(1 * clamp(-INFINITY*20s, 0s, infiniTY*10s))' and 'calc(0s)' should serialize the same in specified values. expected "calc(0s)" but got "calc(1 * clamp(-infinitys, 0s, infinitys))"
FAIL 'calc(1s * max(NaN, min(0,10)))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * clamp(NaN, 0, 10))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * max(0, min(10, NaN)))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * clamp(0, 10, NaN))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * max(0, min(NaN, 10)))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * clamp(0, NaN, 10))' as a specified value should serialize as 'calc(NaN * 1s)'. assert_equals: 'calc(NaN * 1s)' should round-trip exactly in specified values. expected "calc(NaN * 1s)" but got "calc(NaNs)"
FAIL 'calc(1s * clamp(-Infinity, 0, infinity))' as a specified value should serialize as 'calc(0s)'. assert_equals: 'calc(1s * clamp(-Infinity, 0, infinity))' and 'calc(0s)' should serialize the same in specified values. expected "calc(0s)" but got "calc(1s * clamp(-infinity, 0, infinity))"
FAIL 'calc(1s * clamp(-inFinity, infinity, 10))' as a specified value should serialize as 'calc(10s)'. assert_equals: 'calc(1s * clamp(-inFinity, infinity, 10))' and 'calc(10s)' should serialize the same in specified values. expected "calc(10s)" but got "calc(1s * clamp(-infinity, infinity, 10))"

